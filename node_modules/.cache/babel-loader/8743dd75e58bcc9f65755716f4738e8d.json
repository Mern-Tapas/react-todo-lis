{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TAPAS\\\\Desktop\\\\codes\\\\javascript\\\\formdvelopment\\\\src\\\\component\\\\Todoapp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Items from './Items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todoapp() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [Todoitems, setItems] = useState(getLocalI);\n  const [edititemContener, updateContainer] = useState();\n  const [editmode, updatemode] = useState(false); // update input item\n\n  const updateinput = e => {\n    setInput(e.target.value);\n  }; // update object items\n\n\n  const updateItems = e => {\n    e.preventDefault();\n\n    if (!input) {} else if (input && editmode) {\n      Todoitems.map(element => {\n        if (element.id === edititemContener) {\n          return { ...element,\n            name: input\n          };\n        }\n      });\n    } else {\n      const value = {\n        name: input,\n        id: new Date().getTime().toString()\n      };\n      setItems([value, ...Todoitems]);\n      setInput('');\n    }\n  }; // remove object item\n\n\n  const removeItem = id => {\n    const newTodoItems = Todoitems.filter(ele => {\n      return id !== ele.id;\n    });\n    setItems(newTodoItems);\n  }; // edit object item\n\n\n  const editItems = id => {\n    const editthis = Todoitems.find(elem => {\n      return id === elem.id;\n    });\n    updateContainer(id);\n    setInput(editthis.name);\n    updatemode(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: updateItems,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateinput,\n          type: \"text\",\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items-list mt-3\",\n        children: Todoitems.map(items => {\n          return /*#__PURE__*/_jsxDEV(Items, {\n            edit: editItems,\n            remove: removeItem,\n            id: items.id,\n            itemsname: items.name\n          }, items.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 56\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Todoapp, \"UaKY5votVvdnoenx52A6benZ0aI=\");\n\n_c = Todoapp;\nexport default Todoapp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todoapp\");","map":{"version":3,"sources":["C:/Users/TAPAS/Desktop/codes/javascript/formdvelopment/src/component/Todoapp.jsx"],"names":["React","useState","Items","Todoapp","input","setInput","Todoitems","setItems","getLocalI","edititemContener","updateContainer","editmode","updatemode","updateinput","e","target","value","updateItems","preventDefault","map","element","id","name","Date","getTime","toString","removeItem","newTodoItems","filter","ele","editItems","editthis","find","elem","items"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Items from './Items';\r\n\r\nfunction Todoapp() {\r\n\r\n    const [input, setInput] = useState('');\r\n    const [Todoitems, setItems] = useState(getLocalI);\r\n    const [edititemContener, updateContainer] = useState();\r\n    const [editmode, updatemode] = useState(false);\r\n\r\n    // update input item\r\n    const updateinput = (e) => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    // update object items\r\n    const updateItems = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!input) {\r\n\r\n        } \r\n        else if(input && editmode){\r\n            Todoitems.map((element)=>{\r\n                if(element.id === edititemContener){\r\n                    return {...element, name:input}\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            const value = { name: input, id: new Date().getTime().toString() }\r\n            setItems([value, ...Todoitems])\r\n            setInput('')\r\n        }\r\n    }\r\n\r\n    // remove object item\r\n    const removeItem = (id) => {\r\n        const newTodoItems = Todoitems.filter((ele) => { return id !== ele.id })\r\n        setItems(newTodoItems)\r\n\r\n    }\r\n\r\n    // edit object item\r\n    const editItems = (id) => {\r\n        const editthis = Todoitems.find((elem) => { return id === elem.id })\r\n        updateContainer(id);\r\n        setInput(editthis.name)\r\n        updatemode(true);\r\n        \r\n     \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='todo-app'>\r\n                <form onSubmit={updateItems} >\r\n                    <input onChange={updateinput} type=\"text\" value={input} />\r\n                    <button type='submit'>submit</button>\r\n                </form>\r\n                <div className='items-list mt-3'>\r\n                    {Todoitems.map((items) => { return <Items edit={editItems} remove={removeItem} key={items.id} id={items.id} itemsname={items.name} /> })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Todoapp;\r\n"]},"metadata":{},"sourceType":"module"}